  class Solution {
    public:
    int stoneGameVI(vector<int>& aliceValues, vector<int>& bobValues) {
    int i = 0 ; int j = 0 ; 
    int n = aliceValues.size();
    vector<int> total ; 
    while(j<n){
        total.push_back(aliceValues[i]+bobValues[j]);
        i++ ; j++ ; 
    }
    priority_queue<pair<int,int>> p ; 
    int m = total.size() ; 
    for(int i=0 ; i<m ; i++){
        p.push({total[i],i});
    }
    int sum1 = 0 ; 
    int sum2 = 0 ;
    while(!p.empty()){
       int index = p.top().second ; 
        sum1 += aliceValues[index];
        p.pop();
        if(!p.empty()){
             int index = p.top().second ; 
             sum2 += bobValues[index];
            p.pop();
        }
    }
    if(sum1>sum2) return 1 ; 
    else if(sum2>sum1) return -1 ; 
    else return 0 ; 
        }
    };