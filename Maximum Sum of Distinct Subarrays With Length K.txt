class Solution {
public:
    long long maximumSubarraySum(vector<int>& nums, int k) {
    long long sum=0;
    int n=nums.size();
    int left=0,right=0;
    map<int,int> mpp;
    long long maxi=0;
    while(right<n)
    {
        sum+=nums[right];
        mpp[nums[right]]++;
        if((right-left+1)==k)
        {
            if(mpp.size()==k)
            {
                maxi=max(maxi,sum);
            }
            sum-=nums[left];
            mpp[nums[left]]--;
            if(mpp[nums[left]]==0)
            {
                mpp.erase(nums[left]);
            }
            left++;
        }
        right++;
    }   
    return maxi;
    }
};